{
    "contents" : "# Looking at count voting history \n# Voting data from https://github.com/tonmcg/County_Level_Election_Results_12-16\n# Population data from US Census https://www.census.gov/support/USACdataDownloads.html\n\nlibrary(ggplot2)\nlibrary(corrplot)\n\nvot <- read.csv(\"cty_data.csv\", stringsAsFactors = F)\n\ncolnames(vot) <- c(\"fips_code\", \"county\", \n                   \"t2008\", \"d2008\", \"r2008\", \"o2008\",\n                   \"t2012\", \"d2012\", \"r2012\", \"o2012\",\n                   \"t2016\", \"d2016\", \"r2016\", \"o2016\")\n\npop <- read.csv(\"cty_pop.csv\", stringsAsFactors = F)\n\npop1 <- pop[,c(\"Area_name\", \"STCOU\", \"POP010130D\", \"POP010140D\", \"POP010150D\", \"POP010160D\", \"POP010170D\", \"POP010180D\", \"POP010190D\", \"POP010200D\", \"POP010210D\")]\ncolnames(pop1) <- c(\"county\", \"fips_code\", \"p1930\",  \"p1940\",  \"p1950\",  \"p1960\",  \"p1970\",  \"p1980\",  \"p1990\",  \"p2000\",  \"p2010\")\n\npop2 <- pop1[!(pop1$fips_code %in% c(0, 1000, 2000, 4000, 5000, 6000, 8000, 9000, \n                                     10000, 11000, 12000, 13000, 15000, 16000, 17000, 18000, 19000, \n                                     20000, 21000, 22000, 23000, 24000, 25000, 26000, 27000, 28000, 29000, \n                                     30000, 31000, 32000, 33000, 34000, 35000, 36000, 37000, 38000, 39000, \n                                     40000, 41000, 42000, 44000, 45000, 46000, 47000, 48000, 49000, \n                                     50000, 51000, 53000, 54000, 55000, 56000, 60000, 66000, 72000, 78000)),]\n\nvot2 <- vot[!(vot$fips_code %in% c(0, 1000, 2000, 4000, 5000, 6000, 8000, 9000, \n                                   10000, 11000, 12000, 13000, 15000, 16000, 17000, 18000, 19000, \n                                   20000, 21000, 22000, 23000, 24000, 25000, 26000, 27000, 28000, 29000, \n                                   30000, 31000, 32000, 33000, 34000, 35000, 36000, 37000, 38000, 39000, \n                                   40000, 41000, 42000, 44000, 45000, 46000, 47000, 48000, 49000, \n                                   50000, 51000, 53000, 54000, 55000, 56000, 60000, 66000, 72000, 78000)),]\n\nbas <- merge(pop2, vot2[,c(-2)], by = \"fips_code\")\nrm(pop, pop1, pop2, vot, vot2)\n\n# derived vars\n\nbas$pd08 <- bas$d2008 / bas$p2010\nbas$pr08 <- bas$r2008 / bas$p2010\nbas$po08 <- bas$o2008 / bas$p2010\nbas$pt08 <- bas$t2008 / bas$p2010\n\nbas$pd12 <- bas$d2012 / bas$p2010\nbas$pr12 <- bas$r2012 / bas$p2010\nbas$po12 <- bas$o2012 / bas$p2010\nbas$pt12 <- bas$t2012 / bas$p2010\n\nbas$pd16 <- bas$d2016 / bas$p2010\nbas$pr16 <- bas$r2016 / bas$p2010\nbas$po16 <- bas$o2016 / bas$p2010\nbas$pt16 <- bas$t2016 / bas$p2010\n\nbas$mg08 <- bas$pd08 - bas$pr08\nbas$mg12 <- bas$pd12 - bas$pr12\nbas$mg16 <- bas$pd16 - bas$pr16\n\nbas$tn12 <- bas$pt12 - bas$pt08\nbas$tn16 <- bas$pt16 - bas$pt12\n\n# wide to long, for ggplot\n\npl <- data.frame()\nfor (i in 24:35) {\n  \n  fill <- data.frame(tp = substr(colnames(bas)[i], 2, 2),\n                     yr = 2000+as.numeric(substr(colnames(bas)[i], 3, 4)),\n                     fc = bas$fips_code,\n                     ct = bas$county,\n                     val = bas[,i])\n  pl <- rbind(pl, fill)\n  \n  }\n\n# Measuring distributions of voter turnout by party and overall across years\n# Omitting 'other' because it's wonky\n\nplt <- ggplot(pl[pl$tp != \"o\",], aes(x = val, colour = pl[pl$tp != \"o\",\"tp\"])) +\n  geom_freqpoly(bins = 1000) +\n  facet_wrap( ~ yr, nrow = 3) + \n  xlim(0, 1) +\n  theme_bw()\nplt\n\n# Creating vars that measure d, r, and t change in turnout pct from ['08 to '12] and ['12 to '16]\n\nbas$tdd12 <- bas$pd12 - bas$pd08\nbas$trd12 <- bas$pr12 - bas$pr08\nbas$tod12 <- bas$po12 - bas$po08\nbas$ttd12 <- bas$pt12 - bas$pt08\n\nbas$tdd16 <- bas$pd16 - bas$pd12\nbas$trd16 <- bas$pr16 - bas$pr12\nbas$tod16 <- bas$po16 - bas$po12\nbas$ttd16 <- bas$pt16 - bas$pt12\n\npl2 <- data.frame()\nfor (i in 41:48) {\n  \n  fill2 <- data.frame(tp = substr(colnames(bas)[i], 2, 2),\n                      yr = 2000+as.numeric(substr(colnames(bas)[i], 4, 5)),\n                      fc = bas$fips_code,\n                      ct = bas$county,\n                      val = bas[,i])\n  pl2 <- rbind(pl2, fill2)\n  \n}\n\nplt2 <- ggplot(pl2[pl2$tp != \"o\",], aes(x = val, colour = pl2[pl2$tp != \"o\",\"tp\"])) +\n  geom_freqpoly(bins = 1000) +\n  facet_wrap( ~ yr, nrow = 3) + \n  xlim(0, 0.25) +\n  theme_bw()\nplt2\n\n# Comparing metrics - change in turnout and 2016 turnout\n\nsbs <- data.frame(\"fips_code\" = bas$fips_code, \n                  \"county\" = bas$county,\n                  \"pd16\" = bas$pd16,\n                  \"pr16\" = bas$pr16,\n                  \"pt16\" = bas$pt16, \n                  \"dd16\" = bas$tdd16,\n                  \"dr16\" = bas$trd16,\n                  \"dt16\" = bas$ttd16)\n\npl3 <- data.frame()\nfor (i in 3:8) {\n  \n  fill3 <- data.frame(ms = substr(colnames(sbs)[i], 1, 1),\n                      tp = substr(colnames(sbs)[i], 2, 2),\n                      yr = 2000+as.numeric(substr(colnames(sbs)[i], 3, 4)),\n                      fc = sbs$fips_code,\n                      ct = sbs$county,\n                      val = sbs[,i])\n  pl3 <- rbind(pl3, fill3)\n  \n}\n\nplt3 <- ggplot(pl3, aes(x = ct, y = val)) +\n  geom_bar(stat = \"identity\", position = \"identity\") +\n  facet_wrap( ~ yr + ms + tp, ncol = 3) + \n  theme_bw()\nplt3\n\nwrite.csv(sbs, \"sbs.csv\", row.names = F)\n\nc <- cor(sbs[,3:8])\ncorrplot(c)\n\nd <- cor(bas[,24:48])\ncorrplot(d, type = \"upper\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1490193408796.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "791670384",
    "id" : "7E57271B",
    "lastKnownWriteTime" : 1490222418,
    "path" : "~/voting/working1.R",
    "project_path" : "working1.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}